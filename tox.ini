[tox]
envlist = py{36,37,38,39,310,py3}-{linux,macos,windows}
skip_missing_interpreters = true
isolated_build = true
skipsdist=True

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310
    pypy3: pypy3

[gh-actions:env]
PLATFORM =
    ubuntu-20.04: linux
    macos-latest: macos
    windows-latest: windows

[testenv]
skip_install = true

passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

allowlist_externals =
    bash

deps =
    pip>=20.0.1
    coverage
    -r dev-requirements.txt

commands =
    pytest -v --capture=fd --doctest-modules --cov=pyami_asterisk --cov-branch --cov-report term-missing .
    coverage xml
    #bash .github/fix_pkg_name.sh

[testenv:build]
passenv =
    pythonLocation
    CI
    PYTHONIOENCODING 
    PIP_DOWNLOAD_CACHE

deps =
    pip>=21.1
    build
    twine

commands =
    python -m build .
    twine check dist/*

[testenv:check]
skip_install = true
passenv = CI

deps =
    pip>=22.1

commands =
    pip install pyami_asterisk --pre --prefer-binary -f dist/
    python -c 'import pkg_resources; print(pkg_resources.get_distribution("pyami_asterisk").version)'

[testenv:dev]
skip_install = true
passenv =
    pythonLocation
    CI
    PYTHONIOENCODING 
    PIP_DOWNLOAD_CACHE

deps =
    pip>=20.0.1
    -e .[test,cov]

commands =
    pytest -v --capture=fd . --doctest-modules --cov=pyami_asterisk --cov-branch --cov-report term-missing .

[testenv:lint]
passenv =
    pythonLocation
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    pip>=21.1
    loguru
    pylint

commands = pylint --ignore=_version.py --fail-under=5.80 pyami_asterisk/

[testenv:mypy]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

deps =
    pip>=21.1
    loguru
    mypy

commands =
    python -m mypy --follow-imports=normal \
      --install-types --non-interactive pyami_asterisk/
